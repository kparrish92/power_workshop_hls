rename("Sample" = V1) %>%
rename("Power" = V2) %>%
mutate(false_negative = 1 - Power)
### A power analysis workshop for HLS 2022
#### 01 - simulating data ####
library(tidyverse)
library(lsr)
# Loop the t.test and the sim
#number of iterations ----- write this for a small, med, and large eff size
### .4, .7 and 1
### Small cohen's d = .4
i = 1000
s_mean1 = 70
s_sd1 = 25
s_mean2 = 60
s_sd2 = 25
### Medium cohen's d = .7
m_mean1 = 77.5
m_sd1 = 25
m_mean2 = 60
m_sd2 = 25
### large large cohen's d = 1
l_mean1 = 85
l_sd1 = 25
l_mean2 = 60
l_sd2 = 25
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
plot_power_curve = function(mean1, sd1, mean2, sd2, sample_sizes)
{
loop_df = matrix(nrow = i)
sizes = sample_sizes
container_df = matrix(nrow = length(sizes), ncol = 2)
for(thisSize in 1:nrow(container_df)){
for(thisRun in 1:i){
sample_1 = rnorm(sizes[thisSize], m = mean1, sd = sd1)
sample_2 = rnorm(sizes[thisSize], m = mean2, sd = sd2)
t_test = t.test(sample_1,sample_2)
loop_df[thisRun] = t_test$p.value
}
container_df[thisSize, 1] = sizes[thisSize]
container_df[thisSize, 2] = sum(loop_df < .05)/i
}
plot(container_df)
lines(container_df)
plot_df = as.data.frame(container_df) %>%
rename("Sample" = V1) %>%
rename("Power" = V2)
plot = plot_df %>%
ggplot(aes(x = Sample, y = Power, color = Power)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1)
return(plot)
}
power_curve = function(mean1, sd1, mean2, sd2, sample_sizes)
{
loop_df = matrix(nrow = i)
sizes = sample_sizes
container_df = matrix(nrow = length(sizes), ncol = 2)
for(thisSize in 1:nrow(container_df)){
for(thisRun in 1:i){
sample_1 = rnorm(sizes[thisSize], m = mean1, sd = sd1)
sample_2 = rnorm(sizes[thisSize], m = mean2, sd = sd2)
t_test = t.test(sample_1,sample_2)
loop_df[thisRun] = t_test$p.value
}
container_df[thisSize, 1] = sizes[thisSize]
container_df[thisSize, 2] = sum(loop_df < .05)/i
}
plot(container_df)
lines(container_df)
plot_df = as.data.frame(container_df) %>%
rename("Sample" = V1) %>%
rename("Power" = V2) %>%
mutate(false_negative = 1 - Power)
plot = plot_df %>%
ggplot(aes(x = Sample, y = Power, color = Power)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1)
return(plot_df)
}
power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes)
power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
ggtitle("Medium effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5))
power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
s_fn = power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
s_fn = power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
m_fn = power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) %>%
mutate(size = "med")
l_fm = power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) %>%
mutate(size = "large")
s_fn = power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
m_fn = power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) %>%
mutate(size = "med")
l_fn = power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) %>%
mutate(size = "large")
rbind(s_fn, m_fn, l_fn)
power_curve = function(mean1, sd1, mean2, sd2, sample_sizes)
{
loop_df = matrix(nrow = i)
sizes = sample_sizes
container_df = matrix(nrow = length(sizes), ncol = 2)
for(thisSize in 1:nrow(container_df)){
for(thisRun in 1:i){
sample_1 = rnorm(sizes[thisSize], m = mean1, sd = sd1)
sample_2 = rnorm(sizes[thisSize], m = mean2, sd = sd2)
t_test = t.test(sample_1,sample_2)
loop_df[thisRun] = t_test$p.value
}
container_df[thisSize, 1] = sizes[thisSize]
container_df[thisSize, 2] = sum(loop_df < .05)/i
}
plot_df = as.data.frame(container_df) %>%
rename("Sample" = V1) %>%
rename("Power" = V2) %>%
mutate(false_negative = 1 - Power)
plot = plot_df %>%
ggplot(aes(x = Sample, y = Power, color = Power)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1)
return(plot_df)
}
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
ggtitle("Small effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5))
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
ggtitle("Medium effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5))
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
ggtitle("Large effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5))
small_power +
ggsave(here("img", "small_power_curve.png"))
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL) +
ggsave(here("img", "power_curve.png"))
s_fn = power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
m_fn = power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) %>%
mutate(size = "med")
l_fn = power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) %>%
mutate(size = "large")
rbind(s_fn, m_fn, l_fn)
all_fn = rbind(s_fn, m_fn, l_fn)
View(all_fn)
all_fn %>%
ggplot(x = Sample, y = false_negative) + geom_bar()
all_fn %>%
ggplot(x = Sample, y = false_negative, group = Sample) + geom_bar()
all_fn %>%
ggplot(x = Sample, y = false_negative, group = Sample) + geom_col()
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample)) + geom_col()
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample)) + geom_col() +
facet_wrap(~size)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample, fill = "blue")) + geom_col() +
facet_wrap(~size)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample)) +
geom_col(fill = "blue") +
facet_wrap(~size)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample)) +
geom_col(color = "black", fill = "blue") +
facet_wrap(~size)
plot_df %>%
ggplot(aes(x = Sample, y = false_negative, color = false_negative)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, color = false_negative)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, color = false_negative)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1) +
facet_wrap(~size)
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
ggtitle("Small effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Small effect size",
subtitle = "d = .5)")
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
ggtitle("Small effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Small effect size",
subtitle = "d = .4")
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
)
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
ggtitle("Large effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = 1")
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL)
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL) +
ggsave(here("img", "power_curve.png"))
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
)
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
ggtitle("Large effect size") +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = 1")
small_power +
ggsave(here("img", "small_power_curve.png"))
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL) +
ggsave(here("img", "power_curve.png"))
s_fn = power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) %>%
mutate(size = "small")
m_fn = power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) %>%
mutate(size = "med")
l_fn = power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) %>%
mutate(size = "large")
all_fn = rbind(s_fn, m_fn, l_fn)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, group = Sample)) +
geom_col(color = "black", fill = "blue") +
facet_wrap(~size)
all_fn %>%
ggplot(aes(x = Sample, y = false_negative, color = false_negative)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,100,10)) + ylim(0,1) +
facet_wrap(~size)
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4"))
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4"))
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Large effect size",
subtitle = "Cohen's d = 1")
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL)
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Large effect size",
subtitle = "Cohen's d = 1")
small_power +
ggsave(here("img", "small_power_curve.png"))
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL) +
ggsave(here("img", "power_curve.png"))
source("~/Documents/GitHub/power_workshop_hls/plots.R", echo=TRUE)
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL)
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
View(small_power)
View(small_power)
small_power
plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
small_power = plot_power_curve(s_mean1, s_sd1, s_mean2, s_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Small effect size",
subtitle = "Cohen's d = .4")
med_power = plot_power_curve(m_mean1, m_sd1, m_mean2, m_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Medium effect size",
subtitle = "Cohen's d = .7")
large_power = plot_power_curve(l_mean1, l_sd1, l_mean2, l_sd2, sample_sizes) +
theme(legend.position='none') +
theme(axis.text.x = element_text(size = 5)) +
labs(title = "Large effect size",
subtitle = "Cohen's d = 1")
small_power +
ggsave(here("img", "small_power_curve.png"))
ggpubr::ggarrange(small_power, med_power, large_power,
nrow = 1, legend = NULL) +
ggsave(here("img", "power_curve.png"))
small_power
small_power +
ggsave(here("img", "small_power_curve.png"))
# Trying larger sample sizes
sample_sizes = c(30, 60, 90, 120, 150)
plot_power_curve_ul(s1, s2, i = 100, sample_sizes)
sample_sizes = c(30, 60, 90, 120, 150)
plot_power_curve_ul(s1, s2, i = 100, sample_sizes)
# Creates a plot using a loop within a loop, given two sampling distributions (we will use s1 and s2 again, a number of iterations per loop, and a vector of sample sizes you want to try)
plot_power_curve_ul = function(s1, s2, i, sample_sizes)
{
loop_df = matrix(nrow = i)
sizes = sample_sizes
container_df = matrix(nrow = length(sizes), ncol = 2)
for(thisSize in 1:nrow(container_df)){
for(thisRun in 1:i){
sample_1 = s1 %>% sample(sizes[thisSize])
sample_2 = s2 %>% sample(sizes[thisSize])
t_test = t.test(sample_1,sample_2)
loop_df[thisRun] = t_test$p.value
}
container_df[thisSize, 1] = sizes[thisSize]
container_df[thisSize, 2] = sum(loop_df < .05)/i
}
plot_df = as.data.frame(container_df) %>%
rename("Sample" = V1) %>%
rename("Power" = V2)
plot = plot_df %>%
ggplot(aes(x = Sample, y = Power, color = Power)) +
geom_point() +
geom_line() +
ggtitle("Power Curve") +
geom_hline(yintercept = .8, color = "red",
linetype = "dashed", alpha = .5) +
theme_minimal() + scale_x_continuous(breaks=seq(0,max(sample_sizes),10)) + ylim(0,1)
return(plot)
}
sample_sizes = c(20, 40, 60, 80)
plot_power_curve_ul(s1, s2, i = 100, sample_sizes)
# Trying larger sample sizes
sample_sizes = c(30, 60, 90, 120, 150)
plot_power_curve_ul(s1, s2, i = 100, sample_sizes)
# Create a function to calculate Cohen's D
effect_size = function(mean1, mean2, sd1, sd2)
{
mean_diff = mean1 - mean2
pooled_sd = sqrt(((sd1^2 + sd2^2)/2))
es = mean_diff/pooled_sd
return(es)
}
# Use the function - also using our values specified earlier.
effect_size(mean1, mean2, sd1, sd2)
effect_size(mean1 = 46, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 1
effect_size(mean1 = 40, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 2
effect_size(mean1 = 33, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 3
effect_size(mean1 = 46, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 1
effect_size(mean1 = 40, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 2
effect_size(mean1 = 32, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 3
effect_size(mean1 = 46, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 1
effect_size(mean1 = 40, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 2
effect_size(mean1 = 34, mean2 = 30, sd1 = 20, sd2 = 20) # comparison 3
set.seed(1)
s1_l = rnorm(n = 10000, mean = 46, sd = 20)
s2_l = rnorm(n = 10000, mean = 30, sd = 20)
# Trying larger sample sizes
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120)
plot_power_curve_ul(s1 = s1_l, s2 = s2_l, i = 100, sample_sizes)
set.seed(1)
s1_m = rnorm(n = 10000, mean = 40, sd = 20)
s2_m = rnorm(n = 10000, mean = 30, sd = 20)
# Trying larger sample sizes
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120)
plot_power_curve_ul(s1 = s1_m, s2 = s2_m, i = 100, sample_sizes)
# Trying larger sample sizes
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120)
plot_power_curve_ul(s1 = s1_m, s2 = s2_m, i = 1000, sample_sizes)
# Trying larger sample sizes
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120)
plot_power_curve_ul(s1 = s1_m, s2 = s2_m, i = 100, sample_sizes)
set.seed(1)
s1_m = rnorm(n = 10000, mean = 34, sd = 20)
s2_m = rnorm(n = 10000, mean = 30, sd = 20)
set.seed(1)
s1_s = rnorm(n = 10000, mean = 34, sd = 20)
s2_s = rnorm(n = 10000, mean = 30, sd = 20)
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100,
110, 120, 130, 140, 150, 160, 170, 180, 190, 200)
plot_power_curve_ul(s1 = s1_s, s2 = s2_s, i = 100, sample_sizes)
sample_sizes = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100,
110, 120, 130, 140, 150, 160, 170, 180, 190, 200)
plot_power_curve_ul(s1 = s1_s, s2 = s2_s, i = 1000, sample_sizes)
sample_sizes = c(0, 25, 50, 75, 100,
125, 150, 175, 200,
225, 250, 275, 300,
325, 350, 375, 400)
plot_power_curve_ul(s1 = s1_s, s2 = s2_s, i = 1000, sample_sizes)
sample_sizes = c(0, 25, 50, 75, 100,
125, 150, 175, 200,
225, 250, 275, 300,
325, 350, 375, 400)
plot_power_curve_ul(s1 = s1_s, s2 = s2_s, i = 1000, sample_sizes)
sample_sizes = c(25, 50, 75, 100,
125, 150, 175, 200,
225, 250, 275, 300,
325, 350, 375, 400)
plot_power_curve_ul(s1 = s1_s, s2 = s2_s, i = 1000, sample_sizes)
