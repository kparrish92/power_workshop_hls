"0","# Creates a plot using a loop within a loop, given two sampling distributions (we will use s1 and s2 again, a number of iterations per loop, and a vector of sample sizes you want to try)"
"0","plot_power_curve_ul = function(s1, s2, i, sample_sizes)"
"0","{"
"0","  loop_df = matrix(nrow = i)"
"0","  sizes = sample_sizes"
"0","  container_df = matrix(nrow = length(sizes), ncol = 2)"
"0","  for(thisSize in 1:nrow(container_df)){"
"0","    for(thisRun in 1:i){"
"0","      sample_1 = s1 %>% sample(sizes[thisSize])"
"0","      sample_2 = s2 %>% sample(sizes[thisSize])"
"0","      t_test = t.test(sample_1,sample_2)"
"0","      loop_df[thisRun] = t_test$p.value"
"0","    }"
"0","    container_df[thisSize, 1] = sizes[thisSize]"
"0","    container_df[thisSize, 2] = sum(loop_df < .05)/i"
"0","  }"
"0","  plot_df = as.data.frame(container_df) %>% "
"0","    rename(""Sample"" = V1) %>% "
"0","    rename(""Power"" = V2)"
"0","  plot = plot_df %>% "
"0","    ggplot(aes(x = Sample, y = Power, color = Power)) + "
"0","    geom_point() + "
"0","    geom_line() +"
"0","    ggtitle(""Power Curve"") + "
"0","    geom_hline(yintercept = .8, color = ""red"", "
"0","               linetype = ""dashed"", alpha = .5) +"
"0","    theme_minimal() + scale_x_continuous(breaks=seq(0,max(sample_sizes),10)) + ylim(0,1)"
"0","  return(plot)"
"0","}"
